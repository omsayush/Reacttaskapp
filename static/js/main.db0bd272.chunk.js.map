{"version":3,"sources":["ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoList","props","className","class","aria-hidden","onClick","onSelect","id","text","App","useState","inputList","setInputList","Items","setItems","deleteItems","console","log","oldItems","filter","arrElem","index","type","value","placeholder","onChange","event","target","map","itemval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAgBeA,EAdC,SAACC,GAEb,OACI,mCACA,sBAAKC,UAAU,aAAf,UACA,mBAAGC,MAAO,cAAcC,cAAY,OAAOC,QAAS,WAAKJ,EAAMK,SAASL,EAAMM,OAC9E,6BAAKN,EAAMO,aCgDJC,EArDH,WACV,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAaMC,EAAc,SAACR,GACnBS,QAAQC,IAAI,WACZH,GAAS,SAACI,GACR,OAAOA,EAASC,QAAO,SAACC,EAASC,GACjC,OAAOA,IAAUd,SAInB,OACI,mCACA,qBAAKL,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACA,uBACA,0CACA,uBACA,uBAAOoB,KAAK,OACZC,MAAOZ,EACPa,YAAY,mBAAmBC,SA5BpB,SAACC,GAClBd,EAAac,EAAMC,OAAOJ,UA4BpB,wBAAQlB,QAzBI,WAClBS,GAAS,SAACI,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAqBP,OAEvBC,EAAa,KAqBP,iBAEA,6BAECC,EAAMe,KAAI,SAACC,EAASR,GACnB,OAAO,cAAC,EAAD,CACPd,GAAIc,EACJb,KAAMqB,EACNvB,SAAUS,GAHYM,gBC7BnBS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.db0bd272.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ToDoList =(props)=>{\r\n    \r\n    return( \r\n        <>\r\n        <div className=\"todo_style\">\r\n        <i class= \"fa fa-times\" aria-hidden=\"true\" onClick={()=>{props.onSelect(props.id)}}/>\r\n        <li>{props.text}</li>\r\n        </div>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default ToDoList;","import React, {useState} from \"react\";\nimport ToDoList from \"./ToDoList\";\n\nconst App = () =>{\n  const [inputList, setInputList] = useState(\"\");\n  const [Items, setItems] = useState([]);\n\n  const itemEvents = (event)=>{\n    setInputList(event.target.value);\n  };\n\n  const listOfItems = () =>{\n    setItems((oldItems) =>{\n      return [...oldItems, inputList];\n    });\n    setInputList(\"\");\n\n  };\n  const deleteItems = (id) =>{\n    console.log(\"deleted\");\n    setItems((oldItems)=>{\n      return oldItems.filter((arrElem, index)=>{\n      return index !== id;\n    });\n  });\n};\n    return(\n        <>\n        <div className=\"main_div\">\n          <div className=\"center_div\">\n          <br/>\n          <h1>Task App</h1>\n          <br/>\n          <input type=\"text\" \n          value={inputList}\n          placeholder='Create Your List' onChange={itemEvents}/>\n          <button onClick={listOfItems}> + </button>\n\n          <ol>\n          {/*<li>{inputList}</li>*/}\n          {Items.map((itemval, index) =>{\n            return <ToDoList key={index}\n            id={index}\n            text={itemval}\n            onSelect={deleteItems}\n            />;\n          }\n            )}\n          </ol>\n          </div>\n        </div>\n        </>\n\n    );\n};\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}